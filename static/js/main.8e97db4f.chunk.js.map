{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/CardsList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","id","react_default","a","createElement","className","alt","src","concat","CardsList","robots","map","user","i","Components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","target","value","_this2","fetch","response","json","users","_this3","filterRobots","filter","robot","toLowerCase","includes","length","Components_SearchBox","Components_Scroll","Components_ErrorBoundry","Components_CardsList","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Containers_App"],"mappings":"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","file":"static/js/main.8e97db4f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport React from 'react';\r\n\r\nconst Card = (props) =>{\r\n\tconst {name, email, id} = props;\r\n\treturn(\r\n\t\t<div className = \"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-2\">\r\n\t\t\t\t<img alt = \"robot\" src = {`https://robohash.org/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardsList = ({ robots }) => {\r\n\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\trobots.map((user, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t<Card \r\n\t\t\t\t\tkey = {i} \r\n\t\t\t\t\tid = {robots[i].id}\r\n\t\t\t\t\tname = {robots[i].name}\r\n\t\t\t\t\temail = {robots[i].email}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\t\r\n\t);\r\n}\r\n\r\nexport default CardsList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield,searchChange})=> {\r\n\treturn(\r\n\t\t<div className = 'pa2'>\r\n\t\t\t<input \r\n\t\t\tclassName = \"pa3 ba b--green bg-lightest-blue\"\r\n\t\t\ttype='search'\r\n\t\t\tplaceholder='Search Robots'\r\n\t\t\t// created a onclick event so when ever a change happen to the input box the function runs \r\n\t\t\tonChange = {searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n    <div style={{overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n        {props.children}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n\r\ncomponentDidCatch(error, info){\r\n    this.setState({hasError: true})\r\n}\r\n\r\nrender(){\r\n    if(this.state.hasError){\r\n        return <h1>Oooooops. Thats not good</h1>\r\n    }\r\n    return this.props.children\r\n}\r\n}           \r\nexport default ErrorBoundry ;","import React, {Component} from \"react\"\r\nimport CardsList from '../Components/CardsList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport './App.css'\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundry from \"../Components/ErrorBoundry\";\r\n\r\n// first we made class to be able to use the state \r\nclass App extends Component {\r\n\t\tconstructor() {\r\n\t\t\tsuper()\r\n\t\t\t//created state with robots and searchfield \t\r\n\t\t\tthis.state = {\r\n\t\t\t\trobots: [],\r\n\t\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => {this.setState({robots:users})})\r\n\t\t\r\n\t}\r\n\r\n\t// created a method that gives searchfield the input value\r\n\tonSearchChange =(event)=>{\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t\t}\r\n\t\trender() {\r\n\t\t\t// here we are filtering the robots counting on the searchfield value and we put all values to lowercase so we can compare easily\r\n\t\t\tconst filterRobots = this.state.robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n\t\t})\r\n\t\t\treturn !this.state.robots.length?\r\n\t\t\t\t<h1>Loading</h1>:\r\n\t\t\t(\r\n\t\t\t\t<div className = 'tc'>\r\n\t\t\t\t\t<h1 className= 'f1'>RoboFriends</h1>\r\n\t\t\t\t{/*we gave search box a property and its the method we created */}\r\n\t\t\t\t\t<SearchBox searchChange = {this.onSearchChange} />\r\n\t\t\t\t{/*we gave robots the filtered aray propety so we can display the filtered array*/}\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t<CardsList robots = {filterRobots} />\r\n\t\t\t\t\t</ErrorBoundry>\t\t\t\t\r\n\t\t\t\t</Scroll> \r\n\t\t\t\t</div>\t\r\n\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './Containers/App'\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n  <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}